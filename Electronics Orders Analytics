#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--How many orders were placed in January? Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';


--How many of those orders were for an iPhone?
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND Product = 'iPhone';


--Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum FROM BIT_DB.customers customers
JOIN BIT_DB.FebSales Feb 
ON customers.order_id = Feb.orderID
WHERE length(order_id) = 6
AND order_id <> 'Order ID';


--Which product was the cheapest one sold in January, and what was the price?
SELECT product, price FROM BIT_DB.JanSales
WHERE price = (SELECT MIN(price)FROM BIT_DB.JanSales)
LIMIT 1;


--What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT Product, SUM(Quantity)*price FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity*price) AS Revenue FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101';

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT customers.acctnum), AVG(Quantity*price) FROM BIT_DB.customers customers
JOIN BIT_DB.FebSales Feb ON customers.order_ID=Feb.orderID
WHERE Feb.quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT DISTINCT product, SUM(quantity) 
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT COUNT(orderID),
       location
  FROM BIT_DB.JanSales
 WHERE location LIKE '%NY%'
 AND length(orderid) = 6 
 AND orderid <> 'Order ID'
 GROUP BY location
 HAVING COUNT(orderID) > 2;
 
--How many of each type of headphone were sold in February?
SELECT SUM(Quantity), Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones'
GROUP BY Product;

--What was the average amount spent per account in February?
SELECT AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February?
SELECT sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(quantity*price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(quantity*price) DESC
LIMIT 1;
